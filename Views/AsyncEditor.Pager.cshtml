@using Orchard.ContentManagement
@using Lombiq.EditorGroups.Constants
@using Lombiq.EditorGroups.Models

@{
    var contentItem = Model.ContentItem as ContentItem;
    var editorGroupsPart = contentItem?.As<EditorGroupsPart>();
    
    if (!(editorGroupsPart?.AsyncEditorContext ?? false))
    {
        return;
    }
    
    const string BlockName = ElementNames.AsyncEditorPager.BlockName;
    const string ListElementName = BlockName + "__list";
    const string ListItemElementName = BlockName + "__listItem";
    const string EditorGroupLinkElementName = ElementNames.AsyncEditorPager.GroupEditorLinkElementName;
    const string EditorGroupLinkElementNameWithCurrentModifier = EditorGroupLinkElementName + "_current";
    const string EditorGroupLinkElementNameWithFilledModifier = EditorGroupLinkElementName + "_filled";
    const string EditorGroupLinkElementNameWithUnfilledModifier = EditorGroupLinkElementName + "_unfilled";
}

<div class="@BlockName">
    <ol class="@ListElementName">
        @foreach (var editorGroup in editorGroupsPart.AuthorizedEditorGroups)
        {
            <li class="@ListItemElementName">
                @if (editorGroup == editorGroupsPart.CurrentEditorGroup)
                {
                    <div class="@EditorGroupLinkElementNameWithCurrentModifier">
                        @editorGroup.Title
                    </div>
                }
                else if (!editorGroupsPart.CompleteEditorGroupNames.Contains(editorGroup.Name))
                {
                    <div class="@EditorGroupLinkElementNameWithUnfilledModifier">
                        @editorGroup.Title
                    </div>
                }
                else
                {
                    @Html.ActionLink(
                        editorGroup.Title,
                        "GetEditorGroup",
                        "AsyncEditorGroup",
                        new { Area = "Lombiq.EditorGroups", ContentItemId = editorGroupsPart.Id, Group = editorGroup.Name, ContentType = editorGroupsPart.ContentItem.ContentType },
                        new { @class = string.Join(" ", EditorGroupLinkElementNameWithFilledModifier, "js-" + EditorGroupLinkElementNameWithFilledModifier) })
                }
            </li>
        }
    </ol>
</div>