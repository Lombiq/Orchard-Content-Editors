@using Orchard.ContentManagement
@using Orchard.Core.Contents.Settings
@using Lombiq.ContentEditors.Models
@using Lombiq.ContentEditors.Services

@{
    @* TODO: Commented out until the Piedone.HelpfulLibraries and Piedone.HelpfulExtensions repositories are not
        checked out to the most up-to-date changeset which are currently incompatible with this source code. *@
    //var contentItem = Model.ContentItem as ContentItem;
    //var asyncEditorPart = contentItem?.As<AsyncEditorPart>();

    //if (!(asyncEditorPart?.IsAsyncEditorContext ?? false))
    //{
    //    return;
    //}

    var contentItem = Model.ContentItem as ContentItem;
    if (contentItem == null)
    {
        return;
    }

    var asyncEditorPart = contentItem.As<AsyncEditorPart>();
    if (asyncEditorPart == null || !asyncEditorPart.IsAsyncEditorContext || !asyncEditorPart.HasEditorGroups)
    {
        return;
    }

    var asyncEditorService = WorkContext.Resolve<IAsyncEditorService>();

    const string BlockName = "asyncEditorSubmitActions";
    const string SaveButtonElementName = BlockName + "__saveButton";
    const string PublishButtonElementName = BlockName + "__publishButton";
    const string NextButtonElementName = BlockName + "__nextButton";
}

<div class="@BlockName">
    <input type="submit" name="submit.Save" data-submitContext="Save" class="btn button @SaveButtonElementName" value="@T("Save Draft")" />

    @* TODO: Commented out until the Piedone.HelpfulLibraries and Piedone.HelpfulExtensions repositories are not
        checked out to the most up-to-date changeset which are currently incompatible with this source code. *@
    @*@if ((asyncEditorPart.CurrentEditorGroup?.IsPublishGroup ?? true) &&
            asyncEditorPart.TypeDefinition.Settings.GetModel<ContentTypeSettings>().Draftable &&
            asyncEditorService.IsAuthorizedToPublish(asyncEditorPart, asyncEditorPart.CurrentEditorGroup?.Name ?? ""))
        {
            <input type="submit" name="submit.Publish" data-submitContext="Publish" class="btn button @PublishButtonElementName" value="@T("Publish")" />
        }*@

    @if ((asyncEditorPart.CurrentEditorGroup == null || asyncEditorPart.CurrentEditorGroup.IsPublishGroup) &&
        asyncEditorPart.TypeDefinition.Settings.GetModel<ContentTypeSettings>().Draftable &&
        asyncEditorService.IsAuthorizedToPublish(asyncEditorPart, asyncEditorPart.CurrentEditorGroup == null ? "" : asyncEditorPart.CurrentEditorGroup.Name))
    {
        <input type="submit" name="submit.Publish" data-submitContext="Publish" class="btn button @PublishButtonElementName" value="@T("Publish")" />
    }

    @if (asyncEditorPart.NextAuthorizedEditorGroup != null)
    {
        <input type="submit" name="submit.SaveAndNext" data-submitContext="SaveAndNext" class="btn button @NextButtonElementName" value="@T("Save and Next")" />
    }
</div>