@using Lombiq.ContentEditors.ViewModels
@using Orchard.Taxonomies.Helpers

@{
    var viewModel = Model.ViewModel as TaxonomyEditorViewModel;
    var taxonomyViewModel = viewModel.TaxonomyFieldViewModel;

    string BlockName = viewModel.BlockName ?? "taxonomyRadioButtonEditor";
    string EditorTypeModifier = taxonomyViewModel.Settings.SingleChoice ? "_editorType_singleChoice" : "_editorType_multiChoice";
    string BlockNameWithModifier = BlockName + EditorTypeModifier;

    var labelAttributes = new Dictionary<string, object>
    {
        { "class", "editorLabel " + BlockName + "__label" }
    };

    if (viewModel.Required)
    {
        labelAttributes["class"] = labelAttributes["class"] + " required";
    }

    var termIndex = 0;
    var prefix = Html.NameForModel();
}


<div class="editor editorField form-group @BlockName @BlockNameWithModifier">
    @if (!string.IsNullOrEmpty(viewModel.Label))
    {
        @Html.Label(viewModel.Label, labelAttributes)
    }

    @if (!string.IsNullOrEmpty(viewModel.Hint))
    {
        <div class="editorHint @(BlockName)__editorHint">@viewModel.Hint</div>
    }


    <ul class="@(BlockName)__taxonomyTermList">
        @foreach (var entry in taxonomyViewModel.Terms)
        {
            <li>
                @for (var i = 1; i <= entry.GetLevels(); i++)
                {
                    <span class="@(BlockName)__gap">&nbsp;</span>
                }

                @{
                    var disabled = !entry.Selectable ||
                        (taxonomyViewModel.Settings.LeavesOnly &&
                        taxonomyViewModel.Terms.Any(term => term.Path.Contains(entry.Path + entry.Id)));

                    var elementId = $"{prefix}-Term-{termIndex}";
                    if (taxonomyViewModel.Settings.SingleChoice)
                    {
                        <input @if (disabled) { <text> disabled="disabled" </text> }
                               type="radio"
                               value="@taxonomyViewModel.Terms[termIndex].Id"
                               @if (entry.Id == taxonomyViewModel.SingleTermId) { <text> checked="checked" </text> }
                               name="@($"{prefix}.SingleTermId")"
                               id="@elementId"
                               class="@(BlockName)__termRadioButton" />
                    }
                    else
                    {
                        <input @if (disabled) { <text> disabled="disabled" </text> } 
                               type="checkbox" 
                               value="true" 
                               @if (entry.IsChecked) { <text> checked="checked" </text> } 
                               name="@($"{prefix}.Terms[{termIndex}].IsChecked")" 
                               id="@elementId"
                               class="@(BlockName)__termCheckbox" />
                    }
                }

                <label class="forcheckbox @(BlockName)__termLabel" for="@elementId">@entry.Name</label>

                <input type="hidden" name="@($"{prefix}.Terms[{termIndex}].Id")" value="@taxonomyViewModel.Terms[termIndex].Id" />
            </li>

            termIndex++;
        }
    </ul>
</div>