@using Lombiq.ContentEditors.ViewModels
@using Piedone.HelpfulLibraries.Utilities

@{
    var viewModel = Model.ViewModel as EditorViewModel;

    const string DefaultBlockName = "fileUpload";
    string BlockName = viewModel.BlockName ?? DefaultBlockName;

    const string FileUploadContainerElementName = DefaultBlockName + "__fileUploadContainer";
    const string FileUploadPlaceholderElementName = DefaultBlockName + "__fileUploadPlaceholder";
    const string FileUploadElementName = DefaultBlockName + "__fileUpload";

    var fileUploadAttributes = viewModel.BuildAttributes(new Dictionary<string, object>
    {
        { "class", "form-control fileUpload " + FileUploadElementName },
        { "type", "file" }
    });

    var labelAttributes = new Dictionary<string, object>
    {
        { "class", "editorLabel " + DefaultBlockName + "__label" }
    };

    if (viewModel.Required)
    {
        fileUploadAttributes["required"] = true;
        fileUploadAttributes["class"] += " required";
        labelAttributes["class"] += " required";
    }

    if (string.IsNullOrEmpty(viewModel.Placeholder))
    {
        viewModel.Placeholder = T("Browse").Text;
    }
}

<div class="editor editorField form-group @DefaultBlockName @BlockName">
    @if (!string.IsNullOrEmpty(viewModel.Label))
    {
        @Html.Label(viewModel.Name, viewModel.Label, labelAttributes)
    }

    <div class="@FileUploadContainerElementName">
        <span class="@FileUploadPlaceholderElementName">@viewModel.Placeholder</span>
        @Html.TextBox(viewModel.Name, null, fileUploadAttributes)
    </div>

    @if (!string.IsNullOrEmpty(viewModel.Hint))
    {
        <div class="editorHint @(DefaultBlockName)__editorHint">@viewModel.Hint</div>
    }
</div>

@if (this.WasNotDisplayed("Lombiq.Editors.FileUploadEditor"))
{
    <script type="text/javascript">
        ; (function ($) {
            $(function () {
                $(".@FileUploadContainerElementName").click(function () {
                    $(this).find(".@FileUploadElementName").trigger("click");
                });

                $(".@FileUploadElementName").click(function (event) {
                    event.stopPropagation();
                });

                $(".@FileUploadElementName").change(function (event) {
                    var filePath = $(this).val();

                    $(this).siblings(".@FileUploadPlaceholderElementName").text(filePath.length === 0
                        ? "@viewModel.Placeholder" : filePath.split('\\').pop() + " @T("Selected").Text");
                });
            });
        })(jQuery);
    </script>
}