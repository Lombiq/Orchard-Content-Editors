@using Lombiq.ContentEditors.ViewModels
@using Piedone.HelpfulLibraries.Utilities

@{
    var viewModel = Model.ViewModel as EditorViewModel;

    const string DefaultBlockName = "fileUpload";
    string BlockName = viewModel.BlockName ?? DefaultBlockName;

    const string FileUploadContainerElementName = DefaultBlockName + "__container";
    const string FileUploadControlElementName = DefaultBlockName + "__control";
    const string FileUploadCancelElementName = DefaultBlockName + "__cancel";

    if (string.IsNullOrEmpty(viewModel.Placeholder))
    {
        viewModel.Placeholder = T("Browse File or Drag and Drop File Here").Text;
    }

    var fileUploadAttributes = viewModel.BuildAttributes(new Dictionary<string, object>
    {
        { "class", "form-control " + FileUploadControlElementName },
        { "type", "file" },
        { "data-beforebuttontext", viewModel.Placeholder },
    });

    var labelAttributes = new Dictionary<string, object>
    {
        { "class", "editorLabel " + DefaultBlockName + "__label" }
    };

    if (viewModel.Required)
    {
        fileUploadAttributes["required"] = true;
        fileUploadAttributes["class"] += " required";
        labelAttributes["class"] += " required";
    }
}

<div class="editor editorField form-group @DefaultBlockName @BlockName">
    @if (!string.IsNullOrEmpty(viewModel.Label))
    {
        @Html.Label(viewModel.Name, viewModel.Label, labelAttributes)
    }

    <div class="@FileUploadContainerElementName">
        @Html.TextBox(viewModel.Name, null, fileUploadAttributes)
        <span hidden class="@FileUploadCancelElementName"></span>
    </div>

    @if (!string.IsNullOrEmpty(viewModel.Hint))
    {
        <div class="editorHint @(DefaultBlockName)__editorHint">@viewModel.Hint</div>
    }
</div>

@if (this.WasNotDisplayed("Lombiq.Editors.FileUploadEditor"))
{
    <script type="text/javascript">
        ; (function ($) {
            $(function () {
                $(".@FileUploadCancelElementName").click(function (event) {
                    $(this).siblings(".@FileUploadControlElementName").val(null);
                    $(this).hide();
                });

                $(".@FileUploadControlElementName").on("change", function () {
                    if ($(this).val() && $(this).val().length > 0) {
                        $(this).siblings(".@FileUploadCancelElementName").show();
                    }
                    else {
                        $(this).siblings(".@FileUploadCancelElementName").hide();
                    }
                });
            });
        })(jQuery);
    </script>
}