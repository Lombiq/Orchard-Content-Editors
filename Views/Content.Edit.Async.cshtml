@using Orchard.ContentManagement
@using Lombiq.ContentEditors.Models

@{
    @* TODO: Commented out until the Piedone.HelpfulLibraries and Piedone.HelpfulExtensions repositories are not
        checked out to the most up-to-date changeset which are currently incompatible with this source code. *@
    //var contentItem = Model.ContentItem as ContentItem;
    //var asyncEditorPart = contentItem?.As<AsyncEditorPart>();

    //if (!(asyncEditorPart?.IsAsyncEditorContext ?? false))
    //{
    //    return;
    //}


    var contentItem = Model.ContentItem as ContentItem;
    if (contentItem == null)
    {
        return;
    }

    var asyncEditorPart = contentItem.As<AsyncEditorPart>();
    if (asyncEditorPart == null || !asyncEditorPart.IsAsyncEditorContext)
    {
        return;
    }

    const string BlockName = "asyncContentItemEditor";
    const string ContentZoneElementName = BlockName + "__contentZone";
    const string ActionsZoneElementName = BlockName + "__actionsZone";
    const string SidebarZoneElementName = BlockName + "__sidebarZone";
}

<div class="@BlockName">
    @if (Model.Content != null)
    {
        <div class="@ContentZoneElementName">
            @Display(Model.Content)
        </div>
    }
    @if (Model.Actions != null)
    {
        <div class="@ActionsZoneElementName">
            @Display(Model.Actions)
        </div>
    }
    @if (Model.Sidebar != null)
    {
        <div class="@SidebarZoneElementName">
            @Display(Model.Sidebar)
        </div>
    }
</div>