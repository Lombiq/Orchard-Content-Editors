@using Lombiq.ContentEditors.ViewModels
@using Lombiq.ContentEditors.Constants
@using Orchard.Services

@{
    Script.Require(ResourceNames.Lombiq_SelectizeEditor).AtHead();
    Style.Require(ResourceNames.Selectize).AtHead();

    var viewModel = Model.ViewModel as DropdownEditorViewModel;

    if (!viewModel?.SelectList?.Any() ?? true) { return; }

    const string DefaultBlockName = "selectizeDropdownEditor";
    string BlockName = viewModel.BlockName ?? DefaultBlockName;
    const string TextBoxElementName = DefaultBlockName + "__textbox";
    string TechnicalNameModifier = string.IsNullOrEmpty(viewModel.TechnicalName) ? "" : "_" + viewModel.TechnicalName.Replace('.', '_');

    var selectizeInputId = DefaultBlockName + "__SelectizeInput" + TechnicalNameModifier;

    var attributes = viewModel.BuildAttributes(new Dictionary<string, object>
    {
        { "class", TextBoxElementName },
        { "id", selectizeInputId }
    });

    var labelAttributes = new Dictionary<string, object>
    {
        { "class", "editorLabel textboxEditor__label " + DefaultBlockName + "__label" },
        { "for", selectizeInputId }
    };

    if (!string.IsNullOrEmpty(viewModel.Placeholder))
    {
        attributes.Add("placeholder", viewModel.Placeholder);
    }

    var jsonConverter = WorkContext.Resolve<IJsonConverter>();
    var availableSelectListItems = viewModel.SelectList.Select(option => new { option.Text, option.Value });
    var selectedSelectListItems = viewModel.SelectList.Where(option => option.Selected).Select(option => new { option.Text, option.Value });

    viewModel.SortSelectListByText();
}

<div class="editor editorField form-group @DefaultBlockName @BlockName">
    @if (!string.IsNullOrEmpty(viewModel.Label))
    {
        @Html.Label(viewModel.Label, labelAttributes)
    }

    @Html.TextBox(viewModel.TechnicalName, "", attributes)
</div>

<script type="text/javascript">
    ; (function ($) {
        $(function () {
            $("#@selectizeInputId").lombiq_SelectizeEditor({
                singleChoice: @viewModel.SingleChoice.ToString().ToLower(),
                selectizeOptions: JSON.parse(@Html.Raw(Json.Encode(jsonConverter.Serialize(availableSelectListItems)))),
                selectizeSelectedOptions: JSON.parse(@Html.Raw(Json.Encode(jsonConverter.Serialize(selectedSelectListItems))))
            });
        });
    })(jQuery);
</script>