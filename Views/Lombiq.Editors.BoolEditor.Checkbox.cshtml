@using Lombiq.ContentEditors.ViewModels
@using Orchard.Utility.Extensions

@{
    var viewModel = Model.ViewModel as BoolEditorViewModel;
    var value = (viewModel.Value as bool?) ?? false;

    const string DefaultBlockName = "BoolEditor";
    string BlockName = viewModel.BlockName ?? DefaultBlockName;

    var boolAttributes = viewModel.BuildAttributes(new Dictionary<string, object>
    {
    { "class", "form-control textbox " + DefaultBlockName + "__checkbox" }
    });

    var labelAttributes = new Dictionary<string, object>
    {
    { "class", "editorLabel " + DefaultBlockName + "_S_label" }
    };

    if (viewModel.Required)
    {
        boolAttributes["required"] = true;
        boolAttributes["class"] = boolAttributes["class"] + " required";
        labelAttributes["class"] = labelAttributes["class"] + " required";
    }

    if (!string.IsNullOrEmpty(viewModel.Placeholder))
    {
        boolAttributes["placeholder"] = viewModel.Placeholder;
    }
    
    var onChangedSelectorId = viewModel.Id ?? viewModel.Name.HtmlClassify();
}

<div id="@onChangedSelectorId" class="editor editorField form-group @DefaultBlockName @BlockName js-@viewModel.Name.HtmlClassify()">
    @*@if (!string.IsNullOrEmpty(viewModel.Label))
    {
        @Html.Label(viewModel.Name, viewModel.Label, labelAttributes)
    }*@
    <div class="js-@(BlockName)__checkboxButton">
        <label>
            @Html.CheckBox(viewModel.Name, value, boolAttributes)
            @viewModel.Label
        </label>
    </div>
    @if (!string.IsNullOrEmpty(viewModel.Hint))
    {
        <div class="editorHint @(DefaultBlockName)__editorHint">@viewModel.Hint</div>
    }
</div>

<script type="text/javascript">
    ; (function ($) {
        $(function () {
            $("#@onChangedSelectorId .js-@(BlockName)__checkboxButton").on("click", function (event) {
                var boolEditorValue = $(this).find(".@(DefaultBlockName)__checkbox").is(":checked");
                                
                $("#@onChangedSelectorId").trigger("change", [boolEditorValue]);
            });
        });
    })(jQuery);
</script>