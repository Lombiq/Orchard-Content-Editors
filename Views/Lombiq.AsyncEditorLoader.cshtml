@using Orchard.ContentManagement
@using Lombiq.EditorGroups.Constants
@using Lombiq.EditorGroups.Models

@{
    var contentItem = Model.ContentItem as ContentItem;
    var asyncEditorPart = contentItem?.As<AsyncEditorPart>();

    if (asyncEditorPart == null)
    {
        return;
    }

    var editGroupUrl = Url.Action("Edit", "AsyncEditor", new { Area = "Lombiq.EditorGroups" });

    string BlockName = "editorFor" + contentItem.ContentType;
    string ProcessingIndicatorElementName = BlockName + "__processingIndicator";
    string EditorPlaceholderElementName = BlockName + "__editor";
}

@Display.Lombiq_AsyncEditorLoader_Resources()

<div id="@BlockName">
    <div class="@ProcessingIndicatorElementName js-@ProcessingIndicatorElementName" hidden>@T("Processing...")</div>
    <div class="@EditorPlaceholderElementName js-@EditorPlaceholderElementName" hidden></div>
</div>


@using (Script.Foot())
{
    <script type="text/javascript">
        ; (function ($) {
            $(function () {
                $("#@BlockName").lombiq_EditorGroups({
                    asyncEditorApiUrl: "@editGroupUrl",
                    contentType: "@contentItem.ContentType",
                    contentItemId: @contentItem.Id,
                    editorGroupName: "@(asyncEditorPart.CurrentEditorGroup?.Name ?? asyncEditorPart.AuthorizedEditorGroups.FirstOrDefault().Name)",
                    processingIndicatorElementClass: ".js-@ProcessingIndicatorElementName",
                    editorPlaceholderElementClass: ".js-@EditorPlaceholderElementName",
                    formElementClass: ".js-@ElementNames.AsyncEditor.FormElementName",
                    loadEditorActionElementClass: ".js-@ElementNames.AsyncEditorActions.LoadEditorElementName",
                    postEditorActionElementClass: ".js-@ElementNames.AsyncEditorActions.PostEditorElementName",
                });
            });
        })(jQuery);
    </script>
}