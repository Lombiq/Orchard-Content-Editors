{"version":3,"names":["window","asyncEditor","editors","AsyncEditorApiClient","constructor","parameters","this","apiUrl","asyncEditorId","providerName","contentType","loadEditor","contentId","editorGroup","callback","fetch","createUrl","then","response","json","data","catch","error","submitEditor","nextEditorGroup","formData","method","headers","body","URLSearchParams","submittedEditorEvent","CustomEvent","bubbles","cancelable","detail","document","dispatchEvent","url","URL","baseURI","query","search","toString","router","VueRouter","editor","template","api","message","errorText","editorHtml","validationSummaryHtml","editorGroups","defaultErrorText","scriptsHtml","computed","progress","self","length","filter","group","isFilled","showProgressBar","watch","processQuery","updated","scripts","DOMParser","parseFromString","getElementsByTagName","i","script","createElement","text","head","appendChild","parentNode","removeChild","methods","initEditor","success","processApiData","submittingEditorEvent","FormData","$refs","editorForm","apiSuccess","shouldUpdateQuery","updateQuery","$route","push","path","shouldLoadEditor","contentIdKey","editorGroupKey","isCurrentGroup","isFirstGroup","at","name","isLastGroup","getPreviousEditor","map","index","indexOf","getNextEditor","initAsyncEditor","Vue","el","element","id","mounted","components"],"sources":["../../Assets/Scripts/async-editor.js"],"sourcesContent":["/* global Vue */\r\n/* global VueRouter */\r\n\r\nif (!window.asyncEditor) window.asyncEditor = { editors: [] };\r\n\r\nclass AsyncEditorApiClient {\r\n    constructor(parameters) {\r\n        this.apiUrl = parameters.apiUrl;\r\n        this.asyncEditorId = parameters.asyncEditorId;\r\n        this.providerName = parameters.providerName;\r\n        this.contentType = parameters.contentType;\r\n    }\r\n\r\n    loadEditor(contentId, editorGroup, callback) {\r\n        return fetch(this.createUrl(contentId, editorGroup))\r\n            .then((response) => response.json())\r\n            .then((data) => callback(true, data))\r\n            .catch((error) => callback(false, error));\r\n    }\r\n\r\n    submitEditor(contentId, editorGroup, nextEditorGroup, formData, callback) {\r\n        return fetch(this.createUrl(contentId, editorGroup, nextEditorGroup), {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\r\n            },\r\n            body: new URLSearchParams(formData),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => callback(true, data))\r\n            .then(() => {\r\n                const submittedEditorEvent = new CustomEvent('asyncEditorSubmittedEditor', {\r\n                    bubbles: true,\r\n                    cancelable: true,\r\n                    detail: { asyncEditor: window.asyncEditor },\r\n                });\r\n                document.dispatchEvent(submittedEditorEvent);\r\n            })\r\n            .catch((error) => callback(false, error));\r\n    }\r\n\r\n    createUrl(contentId, editorGroup, nextEditorGroup) {\r\n        const url = new URL(this.apiUrl, document.baseURI);\r\n        const query = {\r\n            asyncEditorId: this.asyncEditorId,\r\n            providerName: this.providerName,\r\n            contentType: this.contentType,\r\n        };\r\n        if (contentId) query.contentId = contentId;\r\n        if (editorGroup) query.editorGroup = editorGroup;\r\n        if (nextEditorGroup) query.nextEditorGroup = nextEditorGroup;\r\n        url.search = new URLSearchParams(query).toString();\r\n\r\n        return url;\r\n    }\r\n}\r\n\r\nconst router = new VueRouter();\r\n\r\n// Making the Vue object more readable.\r\n// eslint-disable-next-line object-shorthand\r\nwindow.asyncEditor.editor = {\r\n    template: '#async-editor-template',\r\n    data() {\r\n        return {\r\n            asyncEditorId: '',\r\n            api: null,\r\n            message: '',\r\n            errorText: '',\r\n            contentId: '',\r\n            editorHtml: '',\r\n            validationSummaryHtml: '',\r\n            editorGroup: '',\r\n            editorGroups: [],\r\n            defaultErrorText: '',\r\n            scriptsHtml: '',\r\n        };\r\n    },\r\n    computed: {\r\n        progress(self) {\r\n            if (self.editorGroups.length < 1) return 0;\r\n            return (self.editorGroups.filter((group) => group.isFilled).length / self.editorGroups.length) * 100;\r\n        },\r\n        showProgressBar(self) {\r\n            return self.editorGroups.length > 1;\r\n        },\r\n    },\r\n    watch: {\r\n        '$route.query'() {\r\n            this.processQuery();\r\n        },\r\n    },\r\n    router,\r\n    updated() {\r\n        const self = this;\r\n        if (self.scriptsHtml) {\r\n            const scripts = new DOMParser()\r\n                .parseFromString(self.scriptsHtml, 'text/html')\r\n                .getElementsByTagName('script');\r\n            for (let i = 0; i < scripts.length; i++) {\r\n                const script = document.createElement('script');\r\n                script.text = scripts[i].text;\r\n                document.head.appendChild(script).parentNode.removeChild(script);\r\n            }\r\n\r\n            self.scriptsHtml = '';\r\n        }\r\n    },\r\n    methods: {\r\n        initEditor(parameters) {\r\n            const self = this;\r\n\r\n            self.api = new AsyncEditorApiClient(parameters);\r\n            self.contentId = parameters.contentId;\r\n            self.editorGroup = parameters.editorGroup;\r\n            self.defaultErrorText = parameters.defaultErrorText ?? 'Something went wrong.';\r\n            self.asyncEditorId = parameters.asyncEditorId;\r\n\r\n            if (!self.processQuery()) self.loadEditor();\r\n        },\r\n        loadEditor(editorGroup) {\r\n            const self = this;\r\n\r\n            self.editorGroup = editorGroup ?? self.editorGroup;\r\n\r\n            self.api.loadEditor(\r\n                self.contentId,\r\n                self.editorGroup,\r\n                (success, data) => { self.processApiData(success, data); });\r\n        },\r\n        submitEditor(nextEditorGroup) {\r\n            const self = this;\r\n            const submittingEditorEvent = new CustomEvent('asyncEditorSubmittingEditor', {\r\n                bubbles: true,\r\n                cancelable: true,\r\n                detail: { asyncEditor: window.asyncEditor },\r\n            });\r\n\r\n            const success = document.dispatchEvent(submittingEditorEvent);\r\n            if (success) {\r\n                self.api.submitEditor(\r\n                    self.contentId,\r\n                    self.editorGroup,\r\n                    nextEditorGroup,\r\n                    new FormData(self.$refs.editorForm),\r\n                    (apiSuccess, data) => { self.processApiData(apiSuccess, data); });\r\n            }\r\n        },\r\n        processApiData(success, data) {\r\n            const self = this;\r\n\r\n            if (success) {\r\n                const shouldUpdateQuery = self.contentId !== data.contentId || self.editorGroup !== data.editorGroup;\r\n\r\n                self.errorText = '';\r\n                self.validationSummaryHtml = data.validationSummaryHtml;\r\n                self.contentId = data.contentId;\r\n                self.editorHtml = data.editorHtml;\r\n                self.editorGroup = data.editorGroup;\r\n                self.editorGroups = data.editorGroups;\r\n                self.scriptsHtml = data.scriptsHtml;\r\n                self.message = data.message;\r\n\r\n                window.asyncEditor.editors[self.asyncEditorId].contentId = data.contentId;\r\n\r\n                if (shouldUpdateQuery) self.updateQuery();\r\n            }\r\n            else {\r\n                self.errorText = self.defaultErrorText;\r\n            }\r\n        },\r\n        updateQuery() {\r\n            const self = this;\r\n\r\n            const query = { ...self.$route.query };\r\n            query[self.asyncEditorId + '.contentId'] = self.contentId;\r\n            query[self.asyncEditorId + '.editorGroup'] = self.editorGroup;\r\n\r\n            router.push({ path: '/', query: query });\r\n        },\r\n        processQuery() {\r\n            const self = this;\r\n\r\n            let shouldLoadEditor = false;\r\n\r\n            const contentIdKey = self.asyncEditorId + '.contentId';\r\n            if (contentIdKey in self.$route.query &&\r\n                self.$route.query[contentIdKey] !== self.contentId) {\r\n                self.contentId = self.$route.query[contentIdKey];\r\n                shouldLoadEditor = true;\r\n            }\r\n\r\n            const editorGroupKey = self.asyncEditorId + '.editorGroup';\r\n            if (editorGroupKey in self.$route.query &&\r\n                self.$route.query[editorGroupKey] !== self.editorGroup) {\r\n                self.editorGroup = self.$route.query[editorGroupKey];\r\n                shouldLoadEditor = true;\r\n            }\r\n\r\n            if (shouldLoadEditor) {\r\n                self.loadEditor();\r\n            }\r\n\r\n            return shouldLoadEditor;\r\n        },\r\n        isCurrentGroup(editorGroup) {\r\n            return editorGroup === this.editorGroup;\r\n        },\r\n        isFirstGroup(editorGroup) {\r\n            const self = this;\r\n\r\n            return self.editorGroups.at(0)?.name === (editorGroup ?? self.editorGroup);\r\n        },\r\n        isLastGroup(editorGroup) {\r\n            const self = this;\r\n\r\n            return self.editorGroups.at(-1)?.name === (editorGroup ?? self.editorGroup);\r\n        },\r\n        getPreviousEditor(editorGroup) {\r\n            const editorGroups = this.editorGroups.map((group) => group.name);\r\n            const index = editorGroups.indexOf(editorGroup ?? this.editorGroup);\r\n\r\n            return editorGroups[index - 1];\r\n        },\r\n        getNextEditor(editorGroup) {\r\n            const editorGroups = this.editorGroups.map((group) => group.name);\r\n            const index = editorGroups.indexOf(editorGroup ?? this.editorGroup);\r\n\r\n            return editorGroups[index + 1];\r\n        },\r\n    },\r\n};\r\n\r\nwindow.initAsyncEditor = (asyncEditorId, parameters) => {\r\n    if (!parameters) {\r\n        return window.asyncEditor.editors[asyncEditorId];\r\n    }\r\n\r\n    window.asyncEditor.editors[asyncEditorId] = new Vue({\r\n        el: parameters.element,\r\n        data: { id: asyncEditorId },\r\n        mounted: function () {\r\n            parameters.asyncEditorId = asyncEditorId;\r\n            this.$refs.editor.initEditor(parameters);\r\n        },\r\n        components: {\r\n            'async-editor': window.asyncEditor.editor,\r\n        },\r\n        template: '<async-editor ref=\"editor\"></async-editor>',\r\n    });\r\n\r\n    return undefined;\r\n};\r\n"],"mappings":"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"}